# Generated by Django 3.1.1 on 2020-10-06 03:54

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tx_hash', models.CharField(max_length=120)),
                ('blockHash', models.CharField(max_length=120)),
                ('blockNumber', models.IntegerField()),
                ('from_adrr', models.CharField(max_length=120)),
                ('to_addr', models.CharField(max_length=120)),
                ('from_pk', models.IntegerField()),
                ('to_pk', models.IntegerField()),
                ('gas', models.IntegerField()),
                ('gasPrice', models.IntegerField()),
                ('nonce', models.IntegerField()),
                ('r', models.CharField(max_length=120)),
                ('s', models.CharField(max_length=120)),
                ('v', models.CharField(max_length=120)),
                ('value', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('flag', models.IntegerField(blank=True, default=1)),
                ('balance', models.IntegerField(blank=True, default=0)),
                ('wallet_addr', models.CharField(blank=True, default='', max_length=120)),
                ('it', models.IntegerField(blank=True, default=0)),
                ('electric', models.IntegerField(blank=True, default=0)),
                ('semiconductor', models.IntegerField(blank=True, default=0)),
                ('design', models.IntegerField(blank=True, default=0)),
                ('eng', models.IntegerField(blank=True, default=0)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
    ]
